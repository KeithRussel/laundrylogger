{"ast":null,"code":"import { GET_LAUNDERERS, ADD_LAUNDERER, DELETE_LAUNDERER, LAUNDERER_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_LAUNDERERS:\n      return { ...state,\n        launderers: action.payload // loading: false,\n\n      };\n\n    case ADD_LAUNDERER:\n      return { ...state,\n        launderers: [...state.launderers, action.payload] // loading: false,\n\n      };\n\n    case DELETE_LAUNDERER:\n      return { ...state,\n        launderer: state.launderers.filter(launderer => launderer._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/reactjs/laundry-logger/client/src/context/launderer/laundererReducer.js"],"names":["GET_LAUNDERERS","ADD_LAUNDERER","DELETE_LAUNDERER","LAUNDERER_ERROR","state","action","type","launderers","payload","launderer","filter","_id"],"mappings":"AAAA,SACEA,cADF,EAEEC,aAFF,EAGEC,gBAHF,EAIEC,eAJF,QAKO,UALP;AAOA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,UAAU,EAAEF,MAAM,CAACG,OAFd,CAGL;;AAHK,OAAP;;AAKF,SAAKP,aAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,UAAU,EAAE,CAAC,GAAGH,KAAK,CAACG,UAAV,EAAsBF,MAAM,CAACG,OAA7B,CAFP,CAGL;;AAHK,OAAP;;AAKF,SAAKN,gBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELK,QAAAA,SAAS,EAAEL,KAAK,CAACG,UAAN,CAAiBG,MAAjB,CACRD,SAAD,IAAeA,SAAS,CAACE,GAAV,KAAkBN,MAAM,CAACG,OAD/B;AAFN,OAAP;;AAMF;AACE,aAAOJ,KAAP;AArBJ;AAuBD,CAxBD","sourcesContent":["import {\r\n  GET_LAUNDERERS,\r\n  ADD_LAUNDERER,\r\n  DELETE_LAUNDERER,\r\n  LAUNDERER_ERROR,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_LAUNDERERS:\r\n      return {\r\n        ...state,\r\n        launderers: action.payload,\r\n        // loading: false,\r\n      };\r\n    case ADD_LAUNDERER:\r\n      return {\r\n        ...state,\r\n        launderers: [...state.launderers, action.payload],\r\n        // loading: false,\r\n      };\r\n    case DELETE_LAUNDERER:\r\n      return {\r\n        ...state,\r\n        launderer: state.launderers.filter(\r\n          (launderer) => launderer._id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}