{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\laundry-logger\\\\client\\\\src\\\\components\\\\layout\\\\Search.js\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport LogContext from '../../context/log/logContext';\n\nconst Search = () => {\n  const logContext = useContext(LogContext);\n  const text = useRef('');\n  const {\n    filterLogs,\n    clearFilter,\n    filtered\n  } = logContext;\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== '') {\n      filterLogs(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons prefix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"search\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: text,\n    onChange: onChange,\n    id: \"search\",\n    type: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Search\"))));\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/reactjs/laundry-logger/client/src/components/layout/Search.js"],"names":["React","useContext","useRef","useEffect","LogContext","Search","logContext","text","filterLogs","clearFilter","filtered","current","value","onChange","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,UAAU,GAAGL,UAAU,CAACG,UAAD,CAA7B;AACA,QAAMG,IAAI,GAAGL,MAAM,CAAC,EAAD,CAAnB;AAEA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA;AAA3B,MAAwCJ,UAA9C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAQ,KAAK,IAAjB,EAAuB;AACrBH,MAAAA,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,GAJQ,CAAT;;AAMA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIP,IAAI,CAACI,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BJ,MAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAV;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW;AACZ;AACF,GAND;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,IAAA,GAAG,EAAEF,IAAZ;AAAkB,IAAA,QAAQ,EAAEM,QAA5B;AAAsC,IAAA,EAAE,EAAC,QAAzC;AAAkD,IAAA,IAAI,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,CADF;AAWD,CA9BD;;AAgCA,eAAeR,MAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\r\nimport LogContext from '../../context/log/logContext';\r\n\r\nconst Search = () => {\r\n  const logContext = useContext(LogContext);\r\n  const text = useRef('');\r\n\r\n  const { filterLogs, clearFilter, filtered } = logContext;\r\n\r\n  useEffect(() => {\r\n    if (filtered === null) {\r\n      text.current.value = '';\r\n    }\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    if (text.current.value !== '') {\r\n      filterLogs(e.target.value);\r\n    } else {\r\n      clearFilter();\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <div className='row'>\r\n        <div className='input-field col s12'>\r\n          <i className='material-icons prefix'>search</i>\r\n          <input ref={text} onChange={onChange} id='search' type='search' />\r\n          <label htmlFor='search'>Search</label>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}