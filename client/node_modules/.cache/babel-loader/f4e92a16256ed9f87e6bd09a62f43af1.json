{"ast":null,"code":"import _toConsumableArray from\"D:\\\\reactjs\\\\laundry-logger\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\reactjs\\\\laundry-logger\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{GET_LOGS,ADD_LOG,DELETE_LOG,SET_CURRENT,CLEAR_CURRENT,UPDATE_LOG,FILTER_LOGS,CLEAR_FILTER,LOG_ERROR,CLEAR_LOGS}from'../types';export default(function(state,action){switch(action.type){case GET_LOGS:return _objectSpread(_objectSpread({},state),{},{logs:action.payload,loading:false});case ADD_LOG:return _objectSpread(_objectSpread({},state),{},{// Current State\nlogs:[action.payload].concat(_toConsumableArray(state.logs)),loading:false});case UPDATE_LOG:return _objectSpread(_objectSpread({},state),{},{logs:state.logs.map(function(log){return log._id===action.payload._id?action.payload:log;}),loading:false});// case UPDATE_LOG:\n//   return {\n//     ...state,\n//     logs: state.logs.map((log) =>\n//       log.id === action.payload.id ? action.payload : log\n//     ),\n//     loading: false,\n//   };\ncase DELETE_LOG:return _objectSpread(_objectSpread({},state),{},{logs:state.logs.filter(function(log){return log._id!==action.payload;}),loading:false});case CLEAR_LOGS:return _objectSpread(_objectSpread({},state),{},{logs:null,filtered:null,error:null,current:null});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case FILTER_LOGS:return _objectSpread(_objectSpread({},state),{},{filtered:state.logs.filter(function(log){var regex=new RegExp(\"\".concat(action.payload),'gi');return log.message.match(regex)||log.launderer.match(regex);})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});case LOG_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}});","map":{"version":3,"sources":["D:/reactjs/laundry-logger/client/src/context/log/logReducer.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","FILTER_LOGS","CLEAR_FILTER","LOG_ERROR","CLEAR_LOGS","state","action","type","logs","payload","loading","map","log","_id","filter","filtered","error","current","regex","RegExp","message","match","launderer"],"mappings":"qUAAA,OACEA,QADF,CAEEC,OAFF,CAGEC,UAHF,CAIEC,WAJF,CAKEC,aALF,CAMEC,UANF,CAOEC,WAPF,CAQEC,YARF,CASEC,SATF,CAUEC,UAVF,KAWO,UAXP,CAaA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKZ,CAAAA,QAAL,CACE,sCACKU,KADL,MAEEG,IAAI,CAAEF,MAAM,CAACG,OAFf,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKd,CAAAA,OAAL,CACE,sCACKS,KADL,MACY;AACVG,IAAI,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,IAA5B,EAFN,CAGEE,OAAO,CAAE,KAHX,GAKF,IAAKV,CAAAA,UAAL,CACE,sCACKK,KADL,MAEEG,IAAI,CAAEH,KAAK,CAACG,IAAN,CAAWG,GAAX,CAAe,SAACC,GAAD,QACnBA,CAAAA,GAAG,CAACC,GAAJ,GAAYP,MAAM,CAACG,OAAP,CAAeI,GAA3B,CAAiCP,MAAM,CAACG,OAAxC,CAAkDG,GAD/B,EAAf,CAFR,CAKEF,OAAO,CAAE,KALX,GAOF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAKb,CAAAA,UAAL,CACE,sCACKQ,KADL,MAEEG,IAAI,CAAEH,KAAK,CAACG,IAAN,CAAWM,MAAX,CAAkB,SAACF,GAAD,QAASA,CAAAA,GAAG,CAACC,GAAJ,GAAYP,MAAM,CAACG,OAA5B,EAAlB,CAFR,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKN,CAAAA,UAAL,CACE,sCACKC,KADL,MAEEG,IAAI,CAAE,IAFR,CAGEO,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,IAJT,CAKEC,OAAO,CAAE,IALX,GAOF,IAAKnB,CAAAA,WAAL,CACE,sCACKO,KADL,MAEEY,OAAO,CAAEX,MAAM,CAACG,OAFlB,GAIF,IAAKV,CAAAA,aAAL,CACE,sCACKM,KADL,MAEEY,OAAO,CAAE,IAFX,GAIF,IAAKhB,CAAAA,WAAL,CACE,sCACKI,KADL,MAEEU,QAAQ,CAAEV,KAAK,CAACG,IAAN,CAAWM,MAAX,CAAkB,SAACF,GAAD,CAAS,CACnC,GAAMM,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,GAAG,CAACQ,OAAJ,CAAYC,KAAZ,CAAkBH,KAAlB,GAA4BN,GAAG,CAACU,SAAJ,CAAcD,KAAd,CAAoBH,KAApB,CAAnC,CACD,CAHS,CAFZ,GAOF,IAAKhB,CAAAA,YAAL,CACE,sCACKG,KADL,MAEEU,QAAQ,CAAE,IAFZ,GAIF,IAAKZ,CAAAA,SAAL,CACE,sCACKE,KADL,MAEEW,KAAK,CAAEV,MAAM,CAACG,OAFhB,GAIF,QACE,MAAOJ,CAAAA,KAAP,CAxEJ,CA0ED,CA3ED","sourcesContent":["import {\r\n  GET_LOGS,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  FILTER_LOGS,\r\n  CLEAR_FILTER,\r\n  LOG_ERROR,\r\n  CLEAR_LOGS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state, // Current State\r\n        logs: [action.payload, ...state.logs],\r\n        loading: false,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log._id === action.payload._id ? action.payload : log\r\n        ),\r\n        loading: false,\r\n      };\r\n    // case UPDATE_LOG:\r\n    //   return {\r\n    //     ...state,\r\n    //     logs: state.logs.map((log) =>\r\n    //       log.id === action.payload.id ? action.payload : log\r\n    //     ),\r\n    //     loading: false,\r\n    //   };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log._id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case CLEAR_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: null,\r\n        filtered: null,\r\n        error: null,\r\n        current: null,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_LOGS:\r\n      return {\r\n        ...state,\r\n        filtered: state.logs.filter((log) => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return log.message.match(regex) || log.launderer.match(regex);\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case LOG_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}