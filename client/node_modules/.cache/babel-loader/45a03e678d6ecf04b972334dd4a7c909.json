{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR } from './types'; // export const LogState = props => {\n//     const initialState = {\n//         logs: [\n//             {\n//                 id: 1,\n//                 message: 'test log message testing',\n//                 kilo: 2,\n//                 attention: true,\n//                 launderer: \"Jenny Smith\"\n//             },\n//             {\n//                 id: 2,\n//                 message: 'Laundry from ben apartment room 03',\n//                 kilo: 1,\n//                 attention: true,\n//                 launderer: \"Dina Santos\"\n//             }\n//         ]\n//     }\n//     const [state, dispatch] = useReducer(logReducer, initialState)\n// }\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading(); // const res = await fetch('/api/logs');\n    // const data = await res.json();\n    // dispatch({\n    //   type: GET_LOGS,\n    //   payload: data,\n    // });\n\n    console.log('res');\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["D:/reactjs/laundry-logger/client/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","getLogs","dispatch","setLoading","console","log","err","type","payload","response","statusText"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,SAAlD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C,MAAI;AACFC,IAAAA,UAAU,GADR,CAGF;AACA;AAEA;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEP,UADC;AAEPQ,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAlBM;AAoBP,OAAO,MAAMP,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLI,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR } from './types';\r\n\r\n// export const LogState = props => {\r\n//     const initialState = {\r\n//         logs: [\r\n//             {\r\n//                 id: 1,\r\n//                 message: 'test log message testing',\r\n//                 kilo: 2,\r\n//                 attention: true,\r\n//                 launderer: \"Jenny Smith\"\r\n//             },\r\n//             {\r\n//                 id: 2,\r\n//                 message: 'Laundry from ben apartment room 03',\r\n//                 kilo: 1,\r\n//                 attention: true,\r\n//                 launderer: \"Dina Santos\"\r\n//             }\r\n//         ]\r\n//     }\r\n\r\n//     const [state, dispatch] = useReducer(logReducer, initialState)\r\n\r\n// }\r\n\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    // const res = await fetch('/api/logs');\r\n    // const data = await res.json();\r\n\r\n    // dispatch({\r\n    //   type: GET_LOGS,\r\n    //   payload: data,\r\n    // });\r\n    console.log('res');\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}