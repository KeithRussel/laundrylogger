{"ast":null,"code":"import _toConsumableArray from\"D:\\\\reactjs\\\\laundry-logger\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\reactjs\\\\laundry-logger\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{GET_LAUNDERERS,ADD_LAUNDERER,DELETE_LAUNDERER}from'../types';export default(function(state,action){switch(action.type){case GET_LAUNDERERS:return _objectSpread(_objectSpread({},state),{},{launderers:action.payload// loading: false,\n});case ADD_LAUNDERER:return _objectSpread(_objectSpread({},state),{},{launderers:[].concat(_toConsumableArray(state.launderers),[action.payload])// loading: false,\n});case DELETE_LAUNDERER:return _objectSpread(_objectSpread({},state),{},{launderers:state.launderers.filter(function(launderer){return launderer._id!==action.payload;})});default:return state;}});","map":{"version":3,"sources":["D:/reactjs/laundry-logger/client/src/context/launderer/laundererReducer.js"],"names":["GET_LAUNDERERS","ADD_LAUNDERER","DELETE_LAUNDERER","state","action","type","launderers","payload","filter","launderer","_id"],"mappings":"qUAAA,OAASA,cAAT,CAAyBC,aAAzB,CAAwCC,gBAAxC,KAAgE,UAAhE,CAEA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKL,CAAAA,cAAL,CACE,sCACKG,KADL,MAEEG,UAAU,CAAEF,MAAM,CAACG,OACnB;AAHF,GAKF,IAAKN,CAAAA,aAAL,CACE,sCACKE,KADL,MAEEG,UAAU,8BAAMH,KAAK,CAACG,UAAZ,GAAwBF,MAAM,CAACG,OAA/B,EACV;AAHF,GAKF,IAAKL,CAAAA,gBAAL,CACE,sCACKC,KADL,MAEEG,UAAU,CAAEH,KAAK,CAACG,UAAN,CAAiBE,MAAjB,CACV,SAACC,SAAD,QAAeA,CAAAA,SAAS,CAACC,GAAV,GAAkBN,MAAM,CAACG,OAAxC,EADU,CAFd,GAMF,QACE,MAAOJ,CAAAA,KAAP,CArBJ,CAuBD,CAxBD","sourcesContent":["import { GET_LAUNDERERS, ADD_LAUNDERER, DELETE_LAUNDERER } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_LAUNDERERS:\r\n      return {\r\n        ...state,\r\n        launderers: action.payload,\r\n        // loading: false,\r\n      };\r\n    case ADD_LAUNDERER:\r\n      return {\r\n        ...state,\r\n        launderers: [...state.launderers, action.payload],\r\n        // loading: false,\r\n      };\r\n    case DELETE_LAUNDERER:\r\n      return {\r\n        ...state,\r\n        launderers: state.launderers.filter(\r\n          (launderer) => launderer._id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}