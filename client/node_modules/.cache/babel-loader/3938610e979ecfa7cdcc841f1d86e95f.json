{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\laundry-logger\\\\client\\\\src\\\\context\\\\log\\\\LogState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'react-uuid';\nimport LogContext from './logContext';\nimport logReducer from './logReducer';\nimport { ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, FILTER_LOGS, CLEAR_FILTER } from '../types';\n\nconst LogState = props => {\n  const initialState = {\n    logs: [{\n      id: 1,\n      message: \"Beka's Clothes pick up tomorrow 7am\",\n      kilo: 2,\n      attention: false,\n      launderer: 'Jenny Smith'\n    }, {\n      id: 2,\n      message: \"Sheila's Clothes pick up tomorrow 9am\",\n      kilo: 2,\n      attention: true,\n      launderer: 'Jenny Smith'\n    }, {\n      id: 3,\n      message: 'Brandon Clothes pick up on Saturday',\n      kilo: 1,\n      attention: true,\n      launderer: 'Carla Williams'\n    }],\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(logReducer, initialState); // Add Log\n\n  const addLog = log => {\n    log.id = uuid();\n    dispatch({\n      type: ADD_LOG,\n      payload: log\n    });\n  }; // Delete Log\n\n\n  const deleteLog = id => {\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  }; // Set Current Log\n  // Clear Current Log\n  // Update Log\n  // Filter Log\n\n\n  const filterLogs = text => {\n    dispatch({\n      type: FILTER_LOGS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(LogContext.Provider, {\n    value: {\n      logs: state.logs,\n      filtered: state.filtered,\n      addLog,\n      deleteLog,\n      filterLogs,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default LogState;","map":{"version":3,"sources":["D:/reactjs/laundry-logger/client/src/context/log/LogState.js"],"names":["React","useReducer","uuid","LogContext","logReducer","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","FILTER_LOGS","CLEAR_FILTER","LogState","props","initialState","logs","id","message","kilo","attention","launderer","filtered","state","dispatch","addLog","log","type","payload","deleteLog","filterLogs","text","clearFilter","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SACEC,OADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,YAPF,QAQO,UARP;;AAUA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,CACJ;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE,qCAFX;AAGEC,MAAAA,IAAI,EAAE,CAHR;AAIEC,MAAAA,SAAS,EAAE,KAJb;AAKEC,MAAAA,SAAS,EAAE;AALb,KADI,EAQJ;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE,uCAFX;AAGEC,MAAAA,IAAI,EAAE,CAHR;AAIEC,MAAAA,SAAS,EAAE,IAJb;AAKEC,MAAAA,SAAS,EAAE;AALb,KARI,EAeJ;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,OAAO,EAAE,qCAFX;AAGEC,MAAAA,IAAI,EAAE,CAHR;AAIEC,MAAAA,SAAS,EAAE,IAJb;AAKEC,MAAAA,SAAS,EAAE;AALb,KAfI,CADa;AAwBnBC,IAAAA,QAAQ,EAAE;AAxBS,GAArB;AA2BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACG,UAAD,EAAaU,YAAb,CAApC,CA5B0B,CA8B1B;;AACA,QAAMU,MAAM,GAAIC,GAAD,IAAS;AACtBA,IAAAA,GAAG,CAACT,EAAJ,GAASd,IAAI,EAAb;AACAqB,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAErB,OAAR;AAAiBsB,MAAAA,OAAO,EAAEF;AAA1B,KAAD,CAAR;AACD,GAHD,CA/B0B,CAoC1B;;;AACA,QAAMG,SAAS,GAAIZ,EAAD,IAAQ;AACxBO,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEpB,UAAR;AAAoBqB,MAAAA,OAAO,EAAEX;AAA7B,KAAD,CAAR;AACD,GAFD,CArC0B,CAyC1B;AAEA;AAEA;AAEA;;;AACA,QAAMa,UAAU,GAAIC,IAAD,IAAU;AAC3BP,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEhB,WAAR;AAAqBiB,MAAAA,OAAO,EAAEG;AAA9B,KAAD,CAAR;AACD,GAFD,CAhD0B,CAoD1B;;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBR,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEf;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,IAAI,EAAEO,KAAK,CAACP,IADP;AAELM,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAFX;AAGLG,MAAAA,MAHK;AAILI,MAAAA,SAJK;AAKLC,MAAAA,UALK;AAMLE,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGlB,KAAK,CAACmB,QAVT,CADF;AAcD,CAvED;;AAyEA,eAAepB,QAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport LogContext from './logContext';\r\nimport logReducer from './logReducer';\r\nimport {\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n  FILTER_LOGS,\r\n  CLEAR_FILTER,\r\n} from '../types';\r\n\r\nconst LogState = (props) => {\r\n  const initialState = {\r\n    logs: [\r\n      {\r\n        id: 1,\r\n        message: \"Beka's Clothes pick up tomorrow 7am\",\r\n        kilo: 2,\r\n        attention: false,\r\n        launderer: 'Jenny Smith',\r\n      },\r\n      {\r\n        id: 2,\r\n        message: \"Sheila's Clothes pick up tomorrow 9am\",\r\n        kilo: 2,\r\n        attention: true,\r\n        launderer: 'Jenny Smith',\r\n      },\r\n      {\r\n        id: 3,\r\n        message: 'Brandon Clothes pick up on Saturday',\r\n        kilo: 1,\r\n        attention: true,\r\n        launderer: 'Carla Williams',\r\n      },\r\n    ],\r\n    filtered: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(logReducer, initialState);\r\n\r\n  // Add Log\r\n  const addLog = (log) => {\r\n    log.id = uuid();\r\n    dispatch({ type: ADD_LOG, payload: log });\r\n  };\r\n\r\n  // Delete Log\r\n  const deleteLog = (id) => {\r\n    dispatch({ type: DELETE_LOG, payload: id });\r\n  };\r\n\r\n  // Set Current Log\r\n\r\n  // Clear Current Log\r\n\r\n  // Update Log\r\n\r\n  // Filter Log\r\n  const filterLogs = (text) => {\r\n    dispatch({ type: FILTER_LOGS, payload: text });\r\n  };\r\n\r\n  // Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <LogContext.Provider\r\n      value={{\r\n        logs: state.logs,\r\n        filtered: state.filtered,\r\n        addLog,\r\n        deleteLog,\r\n        filterLogs,\r\n        clearFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </LogContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LogState;\r\n"]},"metadata":{},"sourceType":"module"}