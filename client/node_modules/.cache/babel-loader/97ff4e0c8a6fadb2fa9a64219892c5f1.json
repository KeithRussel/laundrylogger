{"ast":null,"code":"import { GET_LOGS, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, FILTER_LOGS, CLEAR_FILTER, LOG_ERROR, CLEAR_LOGS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return { ...state,\n        logs: action.payload,\n        loading: false\n      };\n\n    case ADD_LOG:\n      return { ...state,\n        // Current State\n        logs: [action.payload, ...state.logs],\n        loading: false\n      };\n\n    case DELETE_LOG:\n      return { ...state,\n        logs: state.logs.filter(log => log._id !== action.payload),\n        loading: false\n      };\n\n    case CLEAR_LOGS:\n      return { ...state,\n        logs: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_LOGS:\n      return { ...state,\n        filtered: state.logs.filter(log => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return log.message.match(regex) || log.launderer.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case LOG_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/reactjs/laundry-logger/client/src/context/log/logReducer.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","FILTER_LOGS","CLEAR_FILTER","LOG_ERROR","CLEAR_LOGS","state","action","type","logs","payload","loading","filter","log","_id","filtered","error","current","regex","RegExp","message","match","launderer"],"mappings":"AAAA,SACEA,QADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,YAPF,EAQEC,SARF,EASEC,UATF,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,QAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAFR;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKb,OAAL;AACE,aAAO,EACL,GAAGQ,KADE;AACK;AACVG,QAAAA,IAAI,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,IAA1B,CAFD;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKZ,UAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWG,MAAX,CAAmBC,GAAD,IAASA,GAAG,CAACC,GAAJ,KAAYP,MAAM,CAACG,OAA9C,CAFD;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,UAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELG,QAAAA,IAAI,EAAE,IAFD;AAGLM,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,KAAK,EAAE,IAJF;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKjB,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELW,QAAAA,OAAO,EAAEV,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAKT,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELW,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELS,QAAAA,QAAQ,EAAET,KAAK,CAACG,IAAN,CAAWG,MAAX,CAAmBC,GAAD,IAAS;AACnC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEZ,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOG,GAAG,CAACO,OAAJ,CAAYC,KAAZ,CAAkBH,KAAlB,KAA4BL,GAAG,CAACS,SAAJ,CAAcD,KAAd,CAAoBH,KAApB,CAAnC;AACD,SAHS;AAFL,OAAP;;AAOF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELS,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKX,SAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELU,QAAAA,KAAK,EAAET,MAAM,CAACG;AAFT,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAxDJ;AA0DD,CA3DD","sourcesContent":["import {\r\n  GET_LOGS,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  FILTER_LOGS,\r\n  CLEAR_FILTER,\r\n  LOG_ERROR,\r\n  CLEAR_LOGS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state, // Current State\r\n        logs: [action.payload, ...state.logs],\r\n        loading: false,\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log._id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case CLEAR_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: null,\r\n        filtered: null,\r\n        error: null,\r\n        current: null,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_LOGS:\r\n      return {\r\n        ...state,\r\n        filtered: state.logs.filter((log) => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return log.message.match(regex) || log.launderer.match(regex);\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case LOG_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}