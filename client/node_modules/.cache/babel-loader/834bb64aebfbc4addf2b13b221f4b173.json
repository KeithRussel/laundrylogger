{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs\\\\laundry-logger\\\\client\\\\src\\\\context\\\\launderer\\\\LaundererState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport uuid from 'react-uuid';\nimport LaundererContext from './laundererContext';\nimport laundererReducer from './laundererReducer';\nimport { GET_LAUNDERERS, ADD_LAUNDERER, DELETE_LAUNDERER, LAUNDERER_ERROR, LOG_ERROR } from '../types';\n\nconst LaundererState = props => {\n  const initialState = {\n    // launderers: [\n    //   {\n    //     id: 1,\n    //     firstName: 'Keith',\n    //     lastName: 'Russel',\n    //   },\n    //   {\n    //     id: 2,\n    //     firstName: 'Kaye',\n    //     lastName: 'Smith',\n    //   },\n    // ],\n    launderers: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(laundererReducer, initialState); // Add Launderer\n\n  const addLaunderer = async launderer => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/launderers', launderer, config);\n      dispatch({\n        type: ADD_LAUNDERER,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOG_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // const addLaunderer = (launderer) => {\n  //   launderer.id = uuid();\n  //   dispatch({ type: ADD_LAUNDERER, payload: launderer });\n  // };\n\n\n  return /*#__PURE__*/React.createElement(LaundererContext.Provider, {\n    value: {\n      launderers: state.launderers,\n      error: state.error,\n      addLaunderer // deleteLaunderer,\n      // getLaunderers,\n      // clearLaunderers,\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default LaundererState;","map":{"version":3,"sources":["D:/reactjs/laundry-logger/client/src/context/launderer/LaundererState.js"],"names":["React","useReducer","axios","uuid","LaundererContext","laundererReducer","GET_LAUNDERERS","ADD_LAUNDERER","DELETE_LAUNDERER","LAUNDERER_ERROR","LOG_ERROR","LaundererState","props","initialState","launderers","error","state","dispatch","addLaunderer","launderer","config","headers","res","post","type","payload","data","err","response","msg","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,SACEC,cADF,EAEEC,aAFF,EAGEC,gBAHF,EAIEC,eAJF,EAKEC,SALF,QAMO,UANP;;AAQA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAMC,YAAY,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,UAAU,EAAE,IAbO;AAcnBC,IAAAA,KAAK,EAAE;AAdY,GAArB;AAiBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACI,gBAAD,EAAmBQ,YAAnB,CAApC,CAlBgC,CAoBhC;;AACA,QAAMK,YAAY,GAAG,MAAOC,SAAP,IAAqB;AACxC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,iBAAX,EAA8BJ,SAA9B,EAAyCC,MAAzC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEjB,aAAR;AAAuBkB,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAApC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZV,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEd,SAAR;AAAmBe,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAAzC,OAAD,CAAR;AACD;AACF,GAZD,CArBgC,CAkChC;AACA;AACA;AACA;;;AAEA,sBACE,oBAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,UAAU,EAAEE,KAAK,CAACF,UADb;AAELC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAFR;AAGLG,MAAAA,YAHK,CAIL;AACA;AACA;;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGN,KAAK,CAACkB,QAVT,CADF;AAcD,CArDD;;AAuDA,eAAenB,cAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport uuid from 'react-uuid';\r\nimport LaundererContext from './laundererContext';\r\nimport laundererReducer from './laundererReducer';\r\n\r\nimport {\r\n  GET_LAUNDERERS,\r\n  ADD_LAUNDERER,\r\n  DELETE_LAUNDERER,\r\n  LAUNDERER_ERROR,\r\n  LOG_ERROR,\r\n} from '../types';\r\n\r\nconst LaundererState = (props) => {\r\n  const initialState = {\r\n    // launderers: [\r\n    //   {\r\n    //     id: 1,\r\n    //     firstName: 'Keith',\r\n    //     lastName: 'Russel',\r\n    //   },\r\n    //   {\r\n    //     id: 2,\r\n    //     firstName: 'Kaye',\r\n    //     lastName: 'Smith',\r\n    //   },\r\n    // ],\r\n    launderers: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(laundererReducer, initialState);\r\n\r\n  // Add Launderer\r\n  const addLaunderer = async (launderer) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/launderers', launderer, config);\r\n      dispatch({ type: ADD_LAUNDERER, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: LOG_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n  // const addLaunderer = (launderer) => {\r\n  //   launderer.id = uuid();\r\n  //   dispatch({ type: ADD_LAUNDERER, payload: launderer });\r\n  // };\r\n\r\n  return (\r\n    <LaundererContext.Provider\r\n      value={{\r\n        launderers: state.launderers,\r\n        error: state.error,\r\n        addLaunderer,\r\n        // deleteLaunderer,\r\n        // getLaunderers,\r\n        // clearLaunderers,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </LaundererContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LaundererState;\r\n"]},"metadata":{},"sourceType":"module"}